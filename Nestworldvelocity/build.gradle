plugins {
    id 'java'
    id 'eclipse'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.8'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("xyz.jpenilla.run-velocity") version "2.3.1"
}

group = 'com.skyblockdynamic.nestworld.velocity'
version = '1.3-admin'

repositories {
    maven {
        name = 'papermc'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
}

dependencies {
    compileOnly 'com.velocitypowered:velocity-api:3.4.0-SNAPSHOT'
    annotationProcessor 'com.velocitypowered:velocity-api:3.4.0-SNAPSHOT'
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'
}


tasks {
    runVelocity {
        velocityVersion("3.4.0-SNAPSHOT")
    }
}

def targetJavaVersion = 17
java {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = ['version': project.version]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java {
    srcDir 'src/main/java'
    //srcDir generateTemplates.map { it.outputs }
}
// sourceSets.main.resources {
//     srcDir 'src/main/resources'
// }


project.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)

shadowJar {
    archiveClassifier.set('') // щоб jar був без "-all"
}